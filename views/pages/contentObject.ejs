<%- include('../partials/header', { data: data }) %>
<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.12.1/css/jquery.dataTables.css">
<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/responsive/2.3.0/css/responsive.dataTables.min.css">
<script type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" charset="utf8" src="//cdn.datatables.net/responsive/2.3.0/js/dataTables.responsive.min.js"></script>
<script type="text/javascript" charset="utf8" src="//cdn.datatables.net/buttons/2.2.3/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" charset="utf8" src="//cdn.datatables.net/buttons/2.2.3/js/buttons.colVis.min.js"></script>

<div class="container box">
    <div class="jumbotron text-primary" style="padding: 1em; line-height: 1.5em;">
        <h1 id="main-title"><span class="fa fa-lock"></span>Loading...</h1>
        <div style="text-align: left">
            <subtitle id="description">
            </subtitle>
            <h2>Module stats</h2>
            <table id="factbox">

            </table>
            <h2>Section titles</h2>
            <table id="section_titles">
                <thead>
                  <tr>
                    <th>Block #</th>
                    <th>Type</th>
                    <th>Title</th>
                    <th># words</th>
                  </tr>
                </thead>
                <tbody id="section_table_body">
        
                </tbody>
            </table>
        </div>
    </div>
</div>
<script>
    function removeHTML(str){ 
        var tmp = document.createElement("DIV");
        tmp.innerHTML = str;
        return tmp.textContent || tmp.innerText || "";
    }
   function addRowToTable(id,key,value) {
    var tr = document.createElement('tr');
    var td1 = document.createElement('td');
    var td2 = document.createElement('td');
    td1.innerHTML = key;
    td2.innerHTML = value;
    tr.append(td1);
    tr.append(td2);
    document.getElementById(id).append(tr);
   }
   function addDataToTable(id,data) {
    var row = document.createElement('tr');
    var number = document.createElement('td')
    var icon = document.createElement('td')
    var title = document.createElement('td')
    var words = document.createElement('td');
    title.innerHTML = data.title;
    number.innerHTML = data.count;
    var img = document.createElement('img');
    img.setAttribute("src","/images/component-icons/icon-"+data.type+".png");
    img.setAttribute("alt",data.type);
    icon.append(img);
    var p = document.createElement("span");
    p.style.paddingLeft = "10px";
    p.innerHTML = data.type;
    icon.append(p);
    words.innerHTML = data.wordCount;
    row.append(number);
    row.append(icon);
    row.append(title);
    row.append(words);
    document.getElementById(id).append(row);
   }
   $(document).ready( function () {
        $.get('/api/contentObject/?id=<%= id %>', function(data) {
            var count = 1;
            document.getElementById("main-title").innerHTML = data.title;
            addRowToTable("factbox","ID",data.id);
            addRowToTable("factbox","# articles",data.articleCount);
            addRowToTable("factbox","# blocks",data.blockCount);
            addRowToTable("factbox","# asessments",data.assessmentCount);
            addRowToTable("factbox","# questions",data.questionCount);
            addRowToTable("factbox","# words",data.wordCount);
            document.getElementById("description").innerHTML = data.description;
            for (const [key, value] of Object.entries(data.articles)) {
                if (typeof value == "object") {
                    if (value.title.trim() != "") {
                        //addTitleToList("section_titles",value.title.trim());
                    }
                    for (const [bkey, bvalue] of Object.entries(data.articles[key].blocks)) {
                        var local = {};
                        local.type = "";
                        local.title = "";
                        if (typeof bvalue == "object") {
                            local.wordCount = bvalue.wordCount;
                            if (bvalue.title.trim() != "") {
                                local.title = bvalue.title.trim();
                            }
                            for (const [ckey, cvalue] of Object.entries(data.articles[key].blocks[bkey].components)) {
                                if (typeof cvalue == "object") {
                                    local.wordCount += cvalue.wordCount;
                                    if (local.type != "" && local.type.trim() == "graphic" && cvalue.type.trim() != "graphic") {
                                      local.type = cvalue.type;
                                    } else if (local.type == "") {
                                      local.type = cvalue.type;
                                    }
                                    if (cvalue.title.trim() != "" && local.title == "") {
                                        local.title = cvalue.title.trim();
                                    }
                                }
                            }
                        }
                        if (local.type != "" && local.title !="") {
                            local.count = count;
                            addDataToTable("section_table_body",local);
                            count += 1;
                        } else if (local.title != "") {
                            local.count = count;
                            local.type = "default";
                            addDataToTable("section_table_body",local);
                            count += 1;
                        }
                    }   
                }
            }
        });
    });
</script>
<%- include('../partials/footer') %>